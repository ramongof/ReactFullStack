{"version":3,"sources":["components/SearchPersons.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notifications.js","App.js","index.js"],"names":["SearchPersons","props","setSearchName","onChange","name","value","event","target","PersonForm","setPersons","checkElement","e","persons","map","person","useState","newName","setNewName","newNumber","setNewNumber","nameTrim","trim","numberTrim","onSubmit","preventDefault","nameObject","number","includes","personService","create","then","returnedPerson","concat","setNotificationMessage","setTimeout","message","window","alert","confirm","update","filter","id","returnedPersons","setClassType","catch","error","type","Persons","row","key","onClick","deletePerson","handleDelete","searchName","element","toLowerCase","indexOf","baseUrl","getAll","axios","get","response","data","newObject","post","put","delete","Notification","classType","className","App","notificationMessage","useEffect","initialPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49cfb850.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst SearchPersons = (props) => {\r\n    const setSearchName = props.onChange    \r\n    let name = props.name\r\n    \r\n    const handleNameChange = (event) => {\r\n      // console.log(event.target.value)\r\n      setSearchName(event.target.value)\r\n    }  \r\n    return(\r\n      <div>\r\n        Who are you looking for? <input value={name} onChange={handleNameChange} />      \r\n      </div>\r\n    )    \r\n}\r\n\r\nexport default SearchPersons","import React, { useState } from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    const setPersons = props.setPersons    \r\n    let checkElement = (e) => props.persons.map(person => person[e])     \r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNumber, setNewNumber ] = useState('')\r\n\r\n    const nameTrim = newName.trim()\r\n    const numberTrim = newNumber.trim()\r\n\r\n    const handleNameChange = (event) => {\r\n        // console.log(event.target.value)\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        // console.log(event.target.value)\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const addPersons = (event) => {\r\n        event.preventDefault()        \r\n        const nameObject = {\r\n            name: nameTrim,\r\n            number: numberTrim,\r\n        }\r\n        \r\n        if((!checkElement('name').includes(nameTrim.trim()) && nameTrim)&&(!checkElement('number').includes(numberTrim) && numberTrim)){\r\n            props.personService\r\n                .create(nameObject)\r\n                .then(returnedPerson => {\r\n                    setPersons(props.persons.concat(returnedPerson))  \r\n                    props.setNotificationMessage(`Added ${nameTrim}`)\r\n                    setTimeout(() => {\r\n                        props.setNotificationMessage(null)\r\n                    }, 5000)                  \r\n                })            \r\n        }\r\n        else if(!nameTrim || (checkElement('name').includes(nameTrim))){     \r\n            if(!numberTrim || checkElement('number').includes(numberTrim)){                 \r\n                let message = (checkElement('name').includes(nameTrim)) ? `${nameTrim} is already added to phonebook` : 'Insert a new name!'                \r\n                window.alert(`${message}`)  \r\n            }\r\n            else{\r\n                if(window.confirm(`${nameTrim} is already added to Phonebook, replace the old number with the new one?`)){\r\n                    props.personService\r\n                        .update( props.persons.filter(e => (e.name === nameTrim)).map(e => e.id), nameObject)\r\n                        .then(returnedPersons => {                            \r\n                            setPersons(props.persons.filter(e => e.id !== returnedPersons.id).concat(returnedPersons))\r\n                            props.setNotificationMessage(`${returnedPersons.name} number was replaced`)\r\n                            props.setClassType('notification update')\r\n                            setTimeout(() => {\r\n                                props.setNotificationMessage(null)\r\n                                props.setClassType('notification')\r\n                            }, 5000)     \r\n                        })\r\n                        .catch(error => {\r\n                            props.setNotificationMessage(\r\n                                `${nameTrim} was already deleted from Phonebook`\r\n                            )\r\n                            props.setClassType('notification error')\r\n                            setTimeout(() => {\r\n                                props.setNotificationMessage(null)\r\n                                props.setClassType('notification')\r\n                            }, 5000)\r\n                        })                                                  \r\n                }\r\n            }                                    \r\n        }        \r\n        else if(!numberTrim || checkElement('number').includes(numberTrim)){            \r\n            let message = (checkElement('number').includes(numberTrim)) ? `${numberTrim} is already added to phonebook` : 'Insert a new Number!'    \r\n            window.alert(`${message}`)  \r\n        }           \r\n        setNewName('')\r\n        setNewNumber('') \r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form onSubmit={addPersons}>\r\n                <div>\r\n                    name: <input\r\n                            value={newName}\r\n                            onChange={handleNameChange}\r\n                            />\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                    number: <input\r\n                                value={newNumber}\r\n                                onChange={handleNumberChange}\r\n                            />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons= (props) => {\r\n    const setPersons = props.setPersons    \r\n    const handleDelete = (person) => {                \r\n        if(window.confirm(`are you sure you want to delete ${person.name}`)){\r\n            props.personService\r\n                .deletePerson(person.id)     \r\n                .then(() => {                    \r\n                    setPersons(props.persons.filter(e => e.id !== person.id))                     \r\n                    props.setNotificationMessage(`${person.name} was successefully deleted`)\r\n                    props.setClassType('notification delete')\r\n                    setTimeout(() => {\r\n                        props.setNotificationMessage(null)\r\n                        props.setClassType('notification')\r\n                    }, 5000) \r\n                })                                     \r\n        }                   \r\n    }\r\n\r\n    let row = () => props.persons.map(person => <li key={person.name} >{person.name} {person.number} <button type=\"button\" onClick={() => handleDelete(person)}>delete</button> </li>)\r\n    \r\n    if(props.searchName.trim() !== '')\r\n    {\r\n        let filterNames = () => props.persons.filter(element => { \r\n                if(element['name'].toLowerCase().indexOf(props.searchName.toLowerCase()) !== -1)\r\n                {      \r\n                    return element\r\n                }\r\n            }\r\n        )  \r\n        row = () => filterNames().map(e =>  <li key={e.name} >{e.name} {e.number} </li>)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <ul>\r\n                {row()}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Persons\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, deletePerson }","import React from 'react'\r\n\r\nconst Notification = ({ message, classType }) => {    \r\n    if(message === null){        \r\n        return null    \r\n    }\r\n    return(\r\n        <div className={classType}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Search from './components/SearchPersons'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport personService from './services/persons'\r\nimport Notification from './components/Notifications'\r\nimport './indexPerson.css'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([])\r\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\r\n  const [ classType, setClassType ] = useState('notification')\r\n\r\n  useEffect(() => {\r\n    personService\r\n        .getAll()\r\n        .then(initialPersons => {\r\n            setPersons(initialPersons)\r\n        })\r\n}, [])\r\n  \r\n  const [ searchName, setSearchName ] = useState('')\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={notificationMessage} classType={classType}/>      \r\n      <Search name={searchName} onChange={setSearchName} persons={persons}/>\r\n      <br/>\r\n      <PersonForm persons={persons} setPersons={setPersons} personService={personService} setNotificationMessage={setNotificationMessage} setClassType={setClassType} />\r\n      <h2>Numbers</h2>\r\n      <Persons persons={persons} searchName={searchName} setPersons={setPersons} personService={personService} setNotificationMessage={setNotificationMessage} setClassType={setClassType} />      \r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from  'react-dom'\nimport App from './App'\nimport './App.css'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}